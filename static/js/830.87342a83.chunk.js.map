{"version":3,"file":"static/js/830.87342a83.chunk.js","mappings":"uNAEA,MCOe,SAAeA,IAC1BC,EAAAA,EAAAA,YAAU,WACNC,SAASC,MAAQ,UACrB,GAAG,IAEH,IAAQC,EAAcJ,EAAdI,UAEFC,GAAOC,EAAAA,EAAAA,IAAQ,CACjBF,UAAAA,EAKA,cAAiB,CAYb,IAKR,OAAa,OAATC,EACO,MAIP,SAAC,MAAS,QACND,UAAWA,EACXC,KAAMA,IAAK,kBAEJE,EAAAA,IAAc,IAEjB,qBAAwB,sBAMxC,C","sources":["KcApp/index.ts","KcApp/KcApp.tsx"],"sourcesContent":["import KcApp from \"./KcApp\";\nexport * from \"./KcApp\";\nexport default KcApp;\n","import \"./KcApp.css\";\nimport type { KcContext } from \"./kcContext\";\nimport KcAppBase, { defaultKcProps, useI18n } from \"keycloakify\";\nimport {useEffect} from \"react\";\n\nexport type Props = {\n    kcContext: KcContext;\n};\n\nexport default function KcApp(props: Props) {\n    useEffect(() => {\n        document.title = \"NoodleID\";\n    }, []);\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({\n        kcContext,\n        // NOTE: Here you can override the default i18n messages\n        // or define new ones that, for example, you would have\n        // defined in the Keycloak admin UI for UserProfile\n        // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n        \"extraMessages\": {\n            // \"en\": {\n            //     \"foo\": \"foo in English\",\n            //     // Here we overwrite the default english value for the message \"doForgotPassword\"\n            //     // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n            //     \"doForgotPassword\": \"I forgot my password\"\n            // },\n            // \"fr\": {\n            //     /* spell-checker: disable */\n            //     \"foo\": \"foo en Francais\",\n            //     \"doForgotPassword\": \"J'ai oubli√© mon mot de passe\"\n            //     /* spell-checker: enable */\n            // },\n        },\n    });\n\n    //NOTE: Locale not yet downloaded\n    if (i18n === null) {\n        return null;\n    }\n\n    return (\n        <KcAppBase\n            kcContext={kcContext}\n            i18n={i18n}\n            {...{\n                ...defaultKcProps,\n                // NOTE: The classes are defined in ./KcApp.css\n                \"kcHeaderWrapperClass\": \"noodlecases-logo\",\n            }}\n            //Uncomment the following line if you want to prevent the default .css to be downloaded\n            //doFetchDefaultThemeResources={false} \n        />\n    );\n}\n"],"names":["props","useEffect","document","title","kcContext","i18n","useI18n","defaultKcProps"],"sourceRoot":""}