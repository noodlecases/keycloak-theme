{"version":3,"file":"static/js/896.7b9d5b3e.chunk.js","mappings":"qfAeMA,GAAOC,EAAAA,EAAAA,OAAK,SAACC,GACf,IAAQC,EAAiGD,EAAjGC,UAAWC,EAAsFF,EAAtFE,KAAI,EAAkFF,EAAhFG,6BAAAA,OAA4B,IAAG,GAAI,IAA6CH,EAA3CI,SAAAA,OAAQ,IAAG,EAAAC,EAAAA,EAAe,EAAKC,EAAO,EAAKN,EAAnG,gEAEEO,EAAgBL,EAAhBK,OAAQC,EAAQN,EAARM,KAEhBC,EAAAA,EAAAA,QAA6BC,IAAtBT,EAAUU,SAEjB,IAAQC,EAA0FX,EAA1FW,cAAeD,EAA2EV,EAA3EU,QAASE,EAAkEZ,EAAlEY,gBAAiBC,EAAiDb,EAAjDa,SAAUC,EAAuCd,EAAvCc,gBAAiBC,EAAsBf,EAAtBe,UAAWC,EAAWhB,EAAXgB,OAEvF,OACIC,EAAAA,cAACd,EAAQ,gCACCH,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCG,GAAO,CAC/Da,gBAAgB,EAChBC,gBAA8BV,IAAlBE,EAA8BM,EAAAA,cAAAA,EAAAA,SAAAA,KAAGN,GAAoBM,EAAAA,cAAAA,EAAAA,SAAAA,KAAGP,EAAQU,SAC5EC,SACIJ,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,mBACJL,EAAAA,cAAAA,IAAAA,CAAGM,UAAU,eACRb,EAAQU,aAEYX,IAApBG,GACGK,EAAAA,cAAAA,IAAAA,KAAIL,EAAgBY,KAAI,SAAAC,GAAc,OAAInB,EAAO,kBAAD,OAAmBmB,GAA0B,IAAEC,KAAK,OAG1Gb,QAAgCJ,IAApBK,OAIIL,IAAdM,EACAE,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGU,KAAMZ,GAAYR,EAAI,4BAGVE,IAAnBO,EAAOY,SACHX,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGU,KAAMX,EAAOY,SAAUrB,EAAI,uBAVtCU,EAAAA,cAAAA,IAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGU,KAAMb,GAAkBP,EAAI,0BAiB3D,IAEA,W","sources":["../node_modules/keycloakify/src/lib/components/Info.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport DefaultTemplate from \"./Template\";\nimport type { TemplateProps } from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport { assert } from \"../tools/assert\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport type { I18n } from \"../i18n\";\n\nexport type InfoProps = KcProps & {\n    kcContext: KcContextBase.Info;\n    i18n: I18n;\n    doFetchDefaultThemeResources?: boolean;\n    Template?: (props: TemplateProps) => JSX.Element | null;\n};\n\nconst Info = memo((props: InfoProps) => {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template = DefaultTemplate, ...kcProps } = props;\n\n    const { msgStr, msg } = i18n;\n\n    assert(kcContext.message !== undefined);\n\n    const { messageHeader, message, requiredActions, skipLink, pageRedirectUri, actionUri, client } = kcContext;\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            displayMessage={false}\n            headerNode={messageHeader !== undefined ? <>{messageHeader}</> : <>{message.summary}</>}\n            formNode={\n                <div id=\"kc-info-message\">\n                    <p className=\"instruction\">\n                        {message.summary}\n\n                        {requiredActions !== undefined && (\n                            <b>{requiredActions.map(requiredAction => msgStr(`requiredAction.${requiredAction}` as const)).join(\",\")}</b>\n                        )}\n                    </p>\n                    {!skipLink && pageRedirectUri !== undefined ? (\n                        <p>\n                            <a href={pageRedirectUri}>{msg(\"backToApplication\")}</a>\n                        </p>\n                    ) : actionUri !== undefined ? (\n                        <p>\n                            <a href={actionUri}>{msg(\"proceedWithAction\")}</a>\n                        </p>\n                    ) : (\n                        client.baseUrl !== undefined && (\n                            <p>\n                                <a href={client.baseUrl}>{msg(\"backToApplication\")}</a>\n                            </p>\n                        )\n                    )}\n                </div>\n            }\n        />\n    );\n});\n\nexport default Info;\n"],"names":["Info","memo","props","kcContext","i18n","doFetchDefaultThemeResources","Template","DefaultTemplate","kcProps","msgStr","msg","assert","undefined","message","messageHeader","requiredActions","skipLink","pageRedirectUri","actionUri","client","React","displayMessage","headerNode","summary","formNode","id","className","map","requiredAction","join","href","baseUrl"],"sourceRoot":""}